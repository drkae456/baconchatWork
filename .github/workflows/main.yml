name: Build, Push Docker Image, and Redeploy with Terraform

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: baconchatwork.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -f ./docker/WebApp/Dockerfile -t baconchatwork.azurecr.io/baconchatportfolio:latest .
          docker push baconchatwork.azurecr.io/baconchatportfolio:latest

      # Step 5: Azure Login for Terraform (using JSON credentials)
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # You can specify the version you need

      # Step 7: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 8: Import existing Azure Container Group (if it exists)
      - name: Import Azure Container Group
        run: terraform import azurerm_container_group.aci "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}/providers/Microsoft.ContainerInstance/containerGroups/${{ secrets.AZURE_CONTAINER_GROUP }}"
        continue-on-error: true  # Continue even if the resource is already imported

      # Step 9: Apply Terraform configuration
      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply -auto-approve
